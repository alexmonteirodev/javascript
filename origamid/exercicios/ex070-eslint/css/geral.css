@charset 'UTF-8';
@import url("https://fonts.googleapis.com/css2?family=Playfair+Display+SC:ital,wght@0,400;0,700;0,900;1,400;1,700;1,900&display=swap");
* {
  margin: 0px;
  padding: 0px;
}
:root {
  --background-color: #faf6ed;
  --color: #222;
  --font: -webkit-font-smoothing: antialiased;
  --font2: Playfair Display SC;
  --yellow: #fb5;
  --orange: #e54;
}

img {
  display: block;
  max-width: 100%; /*para a img ficar 'responsiva' e não estourar o container. Obs: se fosse só width, a imagem ia crescer do tamanho da pg e com o max, ela só cresce até o tamanho natural*/
}
ul {
  list-style: none;
}
body {
  background-color: var(--background-color);
  color: var(--color);
  font-family: var(--font);
}
.grid-container {
  display: grid;
  grid-template-columns: 1fr 120px minmax(300px, 800px) 1fr;
}
[data-cor] {
  background-color: rgba(0, 0, 255, 0.591);
}
.menu {
  grid-column: 3/5;
  margin-top: 2rem; /* 2*16px (rem = unidade relativa do site como se fosse um vw/vh)-A rem ("root em") é o tamanho de fonte do elemento-raiz do documento. OBS: 'EM' usa o tamanho da fonte do elemento pai e 'REM' usa o tamanho da fonte do <html>*/
  margin-bottom: 2rem;
  background-color: var(--yellow);
}
.menu ul {
  display: flex;
  flex-wrap: wrap;
  padding: 10px;
}

.menu li a {
  display: block;
  padding: 10px;
  margin-right: 10px;
  color: var(--color);
  text-decoration: none;
  font-family: monospace;
  font-weight: bold;
  font-size: 1.5em;
  text-transform: uppercase;
  letter-spacing: 0.1em; /*espaçamento entre letras*/
}

.grid-section {
  grid-column: 2/4;
  width: 100%;
  box-sizing: border-box;
  padding: 10px;
  display: grid;
  grid-template-columns: 100px 300px 1fr;
  grid-gap: 20px;
  margin-bottom: 4rem;
}
.titulo {
  font-family: var(--font2), georgia;
  font-size: 6rem;
  font-weight: 400;
  margin-bottom: 1rem;
  grid-column: 1/4;
}
.animais-descricao h2 {
  font-family: monospace;
  font-size: 1.5rem;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  margin-bottom: 1rem;
  color: var(--orange);
}
.animais-descricao h2::before {
  content: "";
  display: inline-block;
  width: 40px;
  height: 10px;
  margin-right: 10px;
  background-color: var(--yellow);
}
.animais-descricao p {
  font-family: Helvetica, Arial, sans-serif;
  margin-bottom: 1rem;
}
.animais-lista {
  height: 360px;
  overflow-y: scroll; /*define o que o que passar no eixo y será visivel com scroll */
  grid-column: 2;
  cursor: pointer;
}
.animais-lista::-webkit-scrollbar {
  width: 18px;
}
.animais-lista::-webkit-scrollbar-thumb {
  /*distancia da imagem e disfarçando o scroll - (thumb é a parte de rola a pag)*/
  background-color: var(--yellow);
  border-left: 4px solid var(--background-color);
  border-right: 4px solid var(--background-color);
}
.animais-lista::-webkit-scrollbar-track {
  /*track = background do scroll*/
  background-color: var(--background-color);
}
.animais-descricao {
  grid-column: 3;
  margin-bottom: 3rem;
}
.faq-lista {
  grid-column: 2/4;
}
.faq-lista dt {
  font-family: monospace;
  font-weight: bold;
  margin-top: 2rem;
  margin-bottom: 0.5rem;
  color: var(--orange);
  font-size: 1.5rem;
  cursor: pointer;
}
.faq-lista dt::before {
  content: "";
  display: inline-block;
  width: 20px;
  height: 10px;
  margin-right: 10px;
  background-color: var(--yellow);
}
.faq-lista dd {
  font-family: Helvetica, Arial, sans-serif;
  margin-bottom: 0.5rem;
  margin-left: 30px;
}
.mapa {
  grid-column: 2;
}
.dados {
  grid-column: 3;
}
.dados li {
  margin-bottom: 1rem;
  font-family: Helvetica, Arial, sans-serif;
}
.dados li::before {
  content: "";
  display: inline-block;
  width: 20px;
  height: 10px;
  margin-right: 10px;
  background-color: var(--yellow);
}
.copy {
  grid-column: 3/5;
  margin-bottom: 2rem;
  background-color: var(--yellow);
}
.copy p {
  padding: 20px;
  font-family: monospace;
  font-weight: bold;
}
@media (max-width: 700px) {
  .grid-container {
    grid-template-columns: 1fr;
  }
  .menu,
  .grid-section,
  .copy {
    grid-column: 1;
  }
  .grid-section {
    grid-template-columns: 100px 1fr;
    grid-gap: 10px;
  }
  .animais-lista {
    grid-column: 1;
  }
  .faq-lista,
  .dados,
  .mapa {
    grid-column: 1 / 3;
  }
  .grid-section h1 {
    font-size: 3rem;
  }
  .menu {
    margin-top: 0px;
  }
  .copy {
    margin-bottom: 0px;
  }
}
.js [data-tab="content"] section {
  /* o primeiro .js se refere ao elemtno pai html adicionado no script acima */
  display: none;
}
[data-tab="content"] section.ativo {
  display: block;
}
[data-tab="content"] section.ativo.show-right {
  animation: show-right 0.5s forwards; /* show = nome da animação; 5s = tempo de duração; forwards = manter no seu ultimo estado */
}
[data-tab="content"] section.ativo.show-down {
  animation: show-down 0.5s forwards; /* show = nome da animação; 5s = tempo de duração; forwards = manter no seu ultimo estado */
}
@keyframes show-right {
  from {
    /* from = saindo de  */
    opacity: 0;
    transform: translate3d(
      -30px,
      0,
      0
    ); /* translate3d = eixos x,y,z ou seja, -30 vai pudar para esquerda no eixo x*/
  }
  to {
    /* to = para */
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}
@keyframes show-down {
  from {
    /* from = saindo de  */
    opacity: 0;
    transform: translate3d(
      0,
      -30px,
      0
    ); /* translate3d = eixos x,y,z ou seja, -30 vai pudar para esquerda no eixo x*/
  }
  to {
    /* to = para */
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}
.js [data-anime="accordion"] dd {
  /*lembrando que o .js na frente é do html para mostrar conteudo caso o js esteja desabilitado*/
  display: none;
}
[data-anime="accordion"] dd.ativo {
  display: block;
  animation: faqslide 0.5s forwards;
}
[data-anime="accordion"] dt::after {
  content: "◦";
  margin-left: 5px;
}
[data-anime="accordion"] dt.ativo::after {
  content: "•";
}

@keyframes faqslide {
  from {
    opacity: 0;
    transform: translate3d(0, -20px, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}
.js [data-anime="scroll"] {
  /* não usou display:none pq se não o elemento seria adicinado na tela e ela daria um pulo, já com o trnasform o elemento já está na tela e por isso não pula, porque ele não é adicionado com o block*/
  opacity: 0;
  transform: translate3d(-30px, 0, 0);
  transition: 0.3s;
}
.js [data-anime="scroll"].ativo {
  opacity: 1; /* opacidade faz o elemento sumir e aparecer */
  transform: translate3d(0, 0, 0);
}

[data-semana]::after {
  display: inline-block;
  content: "";
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background-color: #e54;
  margin-left: 4px;
  border: 2px solid black;
}
[data-semana].aberto::after {
  background-color: #3f4;
}
.btc-preco {
  background-color: #3f4;
  padding: 0.2rem 0.5rem;
  font-weight: bold;
  border-radius: 2px;
}
